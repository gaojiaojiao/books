<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--A：off         最高等级，用于关闭所有日志记录。-->
<!--B：fatal       指出每个严重的错误事件将会导致应用程序的退出。-->
<!--C：error      指出虽然发生错误事件，但仍然不影响系统的继续运行。-->
<!--D：warm     表明会出现潜在的错误情形。-->
<!--E：info         一般和在粗粒度级别上，强调应用程序的运行全程。-->
<!--F：debug     一般用于细粒度级别上，对调试应用程序非常有帮助。-->
<!--G：all           最低等级，用于打开所有日志记录。-->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="INFO" monitorInterval="30">
    <!--先定义所有的appender-->
    <appenders>
        <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="console:[%d{yyy MMM dd HH:mm:ss,SSS}], [%p] - %l - %m%n"/>
            <!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
            <!-- %r 输出自应用启动到输出该log信息耗费的毫秒数  -->
            <!-- %c 输出所属的类目，通常就是所在类的全名 -->
            <!-- %t 输出产生该日志事件的线程名 -->
            <!-- %n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n” -->
            <!-- %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  -->
            <!-- %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlo4.main(TestLog4.java:10)  -->
            <!--%m - 日志内容-->
            <!--%F - java 源文件名-->
            <!--%L - java 源码行数-->
            <!--%M - java 方法名-->
        </console>
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <File name="log" fileName="log/test.log" append="false">
            <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
        </File>
        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" fileName="${sys:user.home}/logs/info.log"
                     filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="1 KB"/>
            </Policies>
        </RollingFile>
        <RollingFile name="RollingFileWarn" fileName="${sys:user.home}/logs/warn.log"
                     filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/warn-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="1 KB"/>
            </Policies>
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
        <RollingFile name="RollingFileError" fileName="${sys:user.home}/logs/error.log"
                     filePattern="${sys:user.home}/logs/$${date:yyyy-MM}/error-%d{yyyy-MM-dd}-%i.log">
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
            <Policies>
                <TimeBasedTriggeringPolicy/>
                <SizeBasedTriggeringPolicy size="1 KB"/>
            </Policies>
        </RollingFile>
        <JDBC name="databaseAppender" tableName="t_log">
            <ConnectionFactory class="com.lin.appapidemo.util.ConnectionFactory" method="getDataSourceConnection" />
            <Column name="log_data" pattern="%d{yyyy-MM-dd HH:mm:ss.SSS}"/>
            <Column name="log_account" pattern="%m" />
            <Column name="log_content" pattern="%m"/>
        </JDBC>
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="log" level="INFO">
            <appender-ref ref="databaseAppender"/>
        </logger>
       <root level="all">
            <appender-ref ref="Console"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>
    </loggers>
</configuration>